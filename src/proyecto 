'use client'

import React, { useState } from 'react'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"

const SYMBOLS = ['üçí', 'üçã', 'üçä', 'üçá', 'üîî', 'üíé']

export default function SlotMachine() {
  const [reels, setReels] = useState(['üçí', 'üçí', 'üçí'])
  const [balance, setBalance] = useState(100)
  const [message, setMessage] = useState('')
  const [isSpinning, setIsSpinning] = useState(false)

  const spin = () => {
    if (balance < 10) {
      setMessage('No tienes suficiente saldo para jugar.')
      return
    }

    setIsSpinning(true)
    setBalance(balance - 10)

    setTimeout(() => {
      const newReels = reels.map(() => SYMBOLS[Math.floor(Math.random() * SYMBOLS.length)])
      setReels(newReels)
      checkWin(newReels)
      setIsSpinning(false)
    }, 1000)
  }

  const checkWin = (newReels: string[]) => {
    if (newReels[0] === newReels[1] && newReels[1] === newReels[2]) {
      const winAmount = 50
      setBalance(prev => prev + winAmount)
      setMessage(`¬°Ganaste ${winAmount} cr√©ditos!`)
    } else if (newReels[0] === newReels[1] || newReels[1] === newReels[2] || newReels[0] === newReels[2]) {
      const winAmount = 20
      setBalance(prev => prev + winAmount)
      setMessage(`¬°Ganaste ${winAmount} cr√©ditos!`)
    } else {
      setMessage('Int√©ntalo de nuevo.')
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-purple-600 to-blue-600 flex items-center justify-center p-4">
      <Card className="w-full max-w-md">
        <CardHeader>
          <CardTitle className="text-center text-2xl font-bold">Tragamonedas</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex justify-center gap-2 mb-4">
            {reels.map((symbol, index) => (
              <div key={index} className="w-24 h-24 border-4 border-yellow-500 rounded-lg flex items-center justify-center bg-white text-4xl">
                {symbol}
              </div>
            ))}
          </div>
          <div className="text-center mb-4 text-xl font-semibold">Saldo: {balance} cr√©ditos</div>
          <Button 
            onClick={spin} 
            className="w-full mb-4 text-lg font-bold" 
            disabled={isSpinning || balance < 10}
          >
            {isSpinning ? 'Girando...' : 'Girar (10 cr√©ditos)'}
          </Button>
          <div className="text-center text-lg font-medium">{message}</div>
        </CardContent>
      </Card>
    </div>
  )
}


